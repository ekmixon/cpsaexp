(herald doorsep2invk (comment "Door Simple Example Protocol"))

(comment "CPSA 4.0.0")
(comment "All input read from doorsep2invk.scm")

(defprotocol doorsep basic
  (defrole init
    (vars (self peer akey) (skey skey) (data text))
    (trace (send (enc (enc skey (invk self)) peer))
      (recv (enc data skey)) (send data))
    (uniq-orig skey))
  (defrole resp
    (vars (self peer akey) (skey skey) (data text))
    (trace (recv (enc (enc skey (invk peer)) self))
      (send (enc data skey)) (recv data))
    (uniq-orig data))
  (comment "Doorsep's protocol using unnamed asymmetric keys"))

(defskeleton doorsep
  (vars (text+0 text) (skey+0 skey) (akey+1 akey+0 akey+3 akey))
  (defstrand resp 3 (data text+0) (skey skey+0) (self akey+1)
    (peer (invk akey+3)))
  (defstrand init 1 (skey skey+0) (self (invk akey+3)) (peer akey+0))
  (precedes ((1 0) (0 0)))
  (non-orig akey+3 (invk akey+0))
  (uniq-orig text+0 skey+0)
  (goals
    (forall
      ((akey+1 akey) (text+0 text) (akey+0 akey+3 akey) (skey+0 skey)
        (node+3 node+2 node+1 node+0 node))
      (implies
        (and (p "init" 0 node+0) (p "resp" 0 node+1) (p "resp" 1 node+2)
          (p "resp" 2 node+3) (p "init" "skey" node+0 skey+0)
          (p "init" "self" node+0 (invk akey+3))
          (p "init" "peer" node+0 akey+0)
          (p "resp" "data" node+2 text+0)
          (p "resp" "data" node+3 text+0)
          (p "resp" "skey" node+1 skey+0)
          (p "resp" "skey" node+2 skey+0)
          (p "resp" "skey" node+3 skey+0)
          (p "resp" "peer" node+1 (invk akey+3))
          (p "resp" "peer" node+2 (invk akey+3))
          (p "resp" "peer" node+3 (invk akey+3))
          (p "resp" "self" node+1 akey+1)
          (p "resp" "self" node+2 akey+1)
          (p "resp" "self" node+3 akey+1) (str-prec node+1 node+2)
          (str-prec node+1 node+3) (str-prec node+2 node+3)
          (prec node+0 node+1) (non (invk akey+0)) (non akey+3)
          (uniq-at text+0 node+2) (uniq-at skey+0 node+0)) (and))))
  (traces
    ((recv (enc (enc skey+0 akey+3) akey+1)) (send (enc text+0 skey+0))
      (recv text+0)) ((send (enc (enc skey+0 akey+3) akey+0))))
  (label 0)
  (unrealized (0 0) (0 2))
  (origs (text+0 (0 1)) (skey+0 (1 0)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton doorsep
  (vars (text+0 text) (skey+0 skey) (akey+0 akey+3 akey))
  (defstrand resp 3 (data text+0) (skey skey+0) (self akey+0)
    (peer (invk akey+3)))
  (defstrand init 1 (skey skey+0) (self (invk akey+3)) (peer akey+0))
  (precedes ((1 0) (0 0)))
  (non-orig akey+3 (invk akey+0))
  (uniq-orig text+0 skey+0)
  (operation encryption-test (contracted (akey+1 akey+0))
    (enc skey+0 akey+3) (0 0) (enc (enc skey+0 akey+3) akey+0))
  (traces
    ((recv (enc (enc skey+0 akey+3) akey+0)) (send (enc text+0 skey+0))
      (recv text+0)) ((send (enc (enc skey+0 akey+3) akey+0))))
  (label 1)
  (parent 0)
  (unrealized (0 2))
  (origs (text+0 (0 1)) (skey+0 (1 0)))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton doorsep
  (vars (text+0 text) (skey+0 skey) (self peer akey))
  (defstrand resp 3 (data text+0) (skey skey+0) (self peer) (peer self))
  (defstrand init 3 (data text+0) (skey skey+0) (self self) (peer peer))
  (precedes ((0 1) (1 1)) ((1 0) (0 0)) ((1 2) (0 2)))
  (non-orig (invk self) (invk peer))
  (uniq-orig text+0 skey+0)
  (operation nonce-test (displaced 1 2 init 3) text+0 (0 2)
    (enc text+0 skey+0))
  (traces
    ((recv (enc (enc skey+0 (invk self)) peer))
      (send (enc text+0 skey+0)) (recv text+0))
    ((send (enc (enc skey+0 (invk self)) peer))
      (recv (enc text+0 skey+0)) (send text+0)))
  (label 2)
  (parent 1)
  (unrealized)
  (shape)
  (satisfies yes)
  (maps
    ((0 1)
      ((akey+1 peer) (text+0 text+0) (akey+0 peer) (akey+3 (invk self))
        (skey+0 skey+0))))
  (origs (skey+0 (1 0)) (text+0 (0 1))))

(defskeleton doorsep
  (vars (text+0 text) (skey+0 skey) (akey+0 akey+3 akey))
  (defstrand resp 3 (data text+0) (skey skey+0) (self akey+0)
    (peer (invk akey+3)))
  (defstrand init 1 (skey skey+0) (self (invk akey+3)) (peer akey+0))
  (deflistener skey+0)
  (precedes ((1 0) (0 0)) ((1 0) (2 0)) ((2 1) (0 2)))
  (non-orig akey+3 (invk akey+0))
  (uniq-orig text+0 skey+0)
  (operation nonce-test (added-listener skey+0) text+0 (0 2)
    (enc text+0 skey+0))
  (traces
    ((recv (enc (enc skey+0 akey+3) akey+0)) (send (enc text+0 skey+0))
      (recv text+0)) ((send (enc (enc skey+0 akey+3) akey+0)))
    ((recv skey+0) (send skey+0)))
  (label 3)
  (parent 1)
  (unrealized (2 0))
  (comment "empty cohort"))

(comment "Nothing left to do")
